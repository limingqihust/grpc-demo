// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elasticcdc.proto
// Protobuf C++ Version: 5.26.1

#include "elasticcdc.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace elasticcdc {

inline constexpr ElasticcdcRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_classify_request_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scale_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ElasticcdcRequest::ElasticcdcRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ElasticcdcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ElasticcdcRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ElasticcdcRequestDefaultTypeInternal() {}
  union {
    ElasticcdcRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ElasticcdcRequestDefaultTypeInternal _ElasticcdcRequest_default_instance_;

inline constexpr ElasticcdcReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_classify_reply_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ElasticcdcReply::ElasticcdcReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ElasticcdcReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ElasticcdcReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ElasticcdcReplyDefaultTypeInternal() {}
  union {
    ElasticcdcReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ElasticcdcReplyDefaultTypeInternal _ElasticcdcReply_default_instance_;
}  // namespace elasticcdc
static ::_pb::Metadata file_level_metadata_elasticcdc_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_elasticcdc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_elasticcdc_2eproto = nullptr;
const ::uint32_t
    TableStruct_elasticcdc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcRequest, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcRequest, _impl_.image_classify_request_info_),
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcRequest, _impl_.model_name_),
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcRequest, _impl_.scale_),
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcRequest, _impl_.filename_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcReply, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::elasticcdc::ElasticcdcReply, _impl_.image_classify_reply_info_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::elasticcdc::ElasticcdcRequest)},
        {13, -1, -1, sizeof(::elasticcdc::ElasticcdcReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::elasticcdc::_ElasticcdcRequest_default_instance_._instance,
    &::elasticcdc::_ElasticcdcReply_default_instance_._instance,
};
const char descriptor_table_protodef_elasticcdc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020elasticcdc.proto\022\nelasticcdc\"{\n\021Elasti"
    "ccdcRequest\022\014\n\004name\030\001 \001(\t\022#\n\033image_class"
    "ify_request_info\030\002 \001(\t\022\022\n\nmodel_name\030\003 \001"
    "(\t\022\r\n\005scale\030\004 \001(\t\022\020\n\010filename\030\005 \001(\t\"E\n\017E"
    "lasticcdcReply\022\017\n\007message\030\001 \001(\t\022!\n\031image"
    "_classify_reply_info\030\002 \001(\t2\310\002\n\021Elasticcd"
    "cService\022H\n\010SayHello\022\035.elasticcdc.Elasti"
    "ccdcRequest\032\033.elasticcdc.ElasticcdcReply"
    "\"\000\022M\n\rSayHelloAgain\022\035.elasticcdc.Elastic"
    "cdcRequest\032\033.elasticcdc.ElasticcdcReply\""
    "\000\022M\n\rImageClassify\022\035.elasticcdc.Elasticc"
    "dcRequest\032\033.elasticcdc.ElasticcdcReply\"\000"
    "\022K\n\013IsPreempted\022\035.elasticcdc.ElasticcdcR"
    "equest\032\033.elasticcdc.ElasticcdcReply\"\000b\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_elasticcdc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_elasticcdc_2eproto = {
    false,
    false,
    565,
    descriptor_table_protodef_elasticcdc_2eproto,
    "elasticcdc.proto",
    &descriptor_table_elasticcdc_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_elasticcdc_2eproto::offsets,
    file_level_metadata_elasticcdc_2eproto,
    file_level_enum_descriptors_elasticcdc_2eproto,
    file_level_service_descriptors_elasticcdc_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_elasticcdc_2eproto_getter() {
  return &descriptor_table_elasticcdc_2eproto;
}
namespace elasticcdc {
// ===================================================================

class ElasticcdcRequest::_Internal {
 public:
};

ElasticcdcRequest::ElasticcdcRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticcdc.ElasticcdcRequest)
}
inline PROTOBUF_NDEBUG_INLINE ElasticcdcRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        image_classify_request_info_(arena, from.image_classify_request_info_),
        model_name_(arena, from.model_name_),
        scale_(arena, from.scale_),
        filename_(arena, from.filename_),
        _cached_size_{0} {}

ElasticcdcRequest::ElasticcdcRequest(
    ::google::protobuf::Arena* arena,
    const ElasticcdcRequest& from)
    : ::google::protobuf::Message(arena) {
  ElasticcdcRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:elasticcdc.ElasticcdcRequest)
}
inline PROTOBUF_NDEBUG_INLINE ElasticcdcRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        image_classify_request_info_(arena),
        model_name_(arena),
        scale_(arena),
        filename_(arena),
        _cached_size_{0} {}

inline void ElasticcdcRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ElasticcdcRequest::~ElasticcdcRequest() {
  // @@protoc_insertion_point(destructor:elasticcdc.ElasticcdcRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ElasticcdcRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.image_classify_request_info_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.scale_.Destroy();
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ElasticcdcRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_._cached_size_),
              false,
          },
          &ElasticcdcRequest::MergeImpl,
          &ElasticcdcRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ElasticcdcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticcdc.ElasticcdcRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.image_classify_request_info_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.scale_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ElasticcdcRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 91, 2> ElasticcdcRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ElasticcdcRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::elasticcdc::ElasticcdcRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.name_)}},
    // string image_classify_request_info = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.image_classify_request_info_)}},
    // string model_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.model_name_)}},
    // string scale = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.scale_)}},
    // string filename = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.filename_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string image_classify_request_info = 2;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.image_classify_request_info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_name = 3;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.model_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string scale = 4;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.scale_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string filename = 5;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcRequest, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\4\33\12\5\10\0\0"
    "elasticcdc.ElasticcdcRequest"
    "name"
    "image_classify_request_info"
    "model_name"
    "scale"
    "filename"
  }},
};

::uint8_t* ElasticcdcRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticcdc.ElasticcdcRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string image_classify_request_info = 2;
  if (!this->_internal_image_classify_request_info().empty()) {
    const std::string& _s = this->_internal_image_classify_request_info();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcRequest.image_classify_request_info");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string model_name = 3;
  if (!this->_internal_model_name().empty()) {
    const std::string& _s = this->_internal_model_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcRequest.model_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string scale = 4;
  if (!this->_internal_scale().empty()) {
    const std::string& _s = this->_internal_scale();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcRequest.scale");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string filename = 5;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcRequest.filename");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticcdc.ElasticcdcRequest)
  return target;
}

::size_t ElasticcdcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticcdc.ElasticcdcRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string image_classify_request_info = 2;
  if (!this->_internal_image_classify_request_info().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_image_classify_request_info());
  }

  // string model_name = 3;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_model_name());
  }

  // string scale = 4;
  if (!this->_internal_scale().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_scale());
  }

  // string filename = 5;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ElasticcdcRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ElasticcdcRequest*>(&to_msg);
  auto& from = static_cast<const ElasticcdcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:elasticcdc.ElasticcdcRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_image_classify_request_info().empty()) {
    _this->_internal_set_image_classify_request_info(from._internal_image_classify_request_info());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_scale().empty()) {
    _this->_internal_set_scale(from._internal_scale());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ElasticcdcRequest::CopyFrom(const ElasticcdcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticcdc.ElasticcdcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ElasticcdcRequest::IsInitialized() const {
  return true;
}

void ElasticcdcRequest::InternalSwap(ElasticcdcRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_classify_request_info_, &other->_impl_.image_classify_request_info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scale_, &other->_impl_.scale_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
}

::google::protobuf::Metadata ElasticcdcRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_elasticcdc_2eproto_getter,
                                   &descriptor_table_elasticcdc_2eproto_once,
                                   file_level_metadata_elasticcdc_2eproto[0]);
}
// ===================================================================

class ElasticcdcReply::_Internal {
 public:
};

ElasticcdcReply::ElasticcdcReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticcdc.ElasticcdcReply)
}
inline PROTOBUF_NDEBUG_INLINE ElasticcdcReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        image_classify_reply_info_(arena, from.image_classify_reply_info_),
        _cached_size_{0} {}

ElasticcdcReply::ElasticcdcReply(
    ::google::protobuf::Arena* arena,
    const ElasticcdcReply& from)
    : ::google::protobuf::Message(arena) {
  ElasticcdcReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:elasticcdc.ElasticcdcReply)
}
inline PROTOBUF_NDEBUG_INLINE ElasticcdcReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        image_classify_reply_info_(arena),
        _cached_size_{0} {}

inline void ElasticcdcReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ElasticcdcReply::~ElasticcdcReply() {
  // @@protoc_insertion_point(destructor:elasticcdc.ElasticcdcReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ElasticcdcReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.image_classify_reply_info_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ElasticcdcReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ElasticcdcReply, _impl_._cached_size_),
              false,
          },
          &ElasticcdcReply::MergeImpl,
          &ElasticcdcReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ElasticcdcReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticcdc.ElasticcdcReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.image_classify_reply_info_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ElasticcdcReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> ElasticcdcReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ElasticcdcReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::elasticcdc::ElasticcdcReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string image_classify_reply_info = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcReply, _impl_.image_classify_reply_info_)}},
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ElasticcdcReply, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcReply, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string image_classify_reply_info = 2;
    {PROTOBUF_FIELD_OFFSET(ElasticcdcReply, _impl_.image_classify_reply_info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\7\31\0\0\0\0\0"
    "elasticcdc.ElasticcdcReply"
    "message"
    "image_classify_reply_info"
  }},
};

::uint8_t* ElasticcdcReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticcdc.ElasticcdcReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcReply.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string image_classify_reply_info = 2;
  if (!this->_internal_image_classify_reply_info().empty()) {
    const std::string& _s = this->_internal_image_classify_reply_info();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "elasticcdc.ElasticcdcReply.image_classify_reply_info");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticcdc.ElasticcdcReply)
  return target;
}

::size_t ElasticcdcReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticcdc.ElasticcdcReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // string image_classify_reply_info = 2;
  if (!this->_internal_image_classify_reply_info().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_image_classify_reply_info());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ElasticcdcReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ElasticcdcReply*>(&to_msg);
  auto& from = static_cast<const ElasticcdcReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:elasticcdc.ElasticcdcReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_image_classify_reply_info().empty()) {
    _this->_internal_set_image_classify_reply_info(from._internal_image_classify_reply_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ElasticcdcReply::CopyFrom(const ElasticcdcReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticcdc.ElasticcdcReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ElasticcdcReply::IsInitialized() const {
  return true;
}

void ElasticcdcReply::InternalSwap(ElasticcdcReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_classify_reply_info_, &other->_impl_.image_classify_reply_info_, arena);
}

::google::protobuf::Metadata ElasticcdcReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_elasticcdc_2eproto_getter,
                                   &descriptor_table_elasticcdc_2eproto_once,
                                   file_level_metadata_elasticcdc_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace elasticcdc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_elasticcdc_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
